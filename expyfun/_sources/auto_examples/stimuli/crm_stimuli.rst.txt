.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_stimuli_crm_stimuli.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_stimuli_crm_stimuli.py:


==================
Use the CRM corpus
==================

This shows how to use the CRM corpus functions.

@author: rkmaddox



.. code-block:: python


    from expyfun._utils import _TempDir
    from expyfun import ExperimentController, analyze, building_doc
    from expyfun.stimuli import (crm_prepare_corpus, crm_sentence, crm_info,
                                 crm_response_menu, add_pad, CRMPreload)

    import numpy as np

    print(__doc__)

    crm_path = _TempDir()
    fs = 40000







Prepare the corpus
------------------

For simplicity, here we prepare just two talkers at the native 40000 Hz
sampling rate.

.. note:: For your experiment, you only need to prepare the corpus once per
          sampling rate, you should probably use the default path, and you
          should just do all the talkers at once. For the example, we are
          using fs=40000 and only doing two talkers so that the stimulus
          preparation is very fast, and a temp directory so that we don't
          interfere with any other prepared corpuses. Your code will likely
          look like this line, and not appear in your actual experiment
          script::

              >>> crm_prepare_corpus(24414)




.. code-block:: python


    crm_prepare_corpus(fs, path_out=crm_path, overwrite=True,
                       talker_list=[dict(sex=0, talker_num=0),
                                    dict(sex=1, talker_num=0)])

    # print the valid callsigns
    print('Valid callsigns are {0}'.format(crm_info()['callsign']))

    # read a sentence in from the hard drive
    x1 = 0.5 * crm_sentence(fs, 'm', '0', 'c', 'r', '5', path=crm_path)

    # preload all the talkers and get a second sentence from memory
    crm = CRMPreload(fs, path=crm_path)
    x2 = crm.sentence('f', '0', 'ringo', 'green', '6')

    x = add_pad([x1, x2], alignment='start')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Preparing sex 0.
        Preparing talker 0.

    Preparing sex 1.
        Preparing talker 0.

    Finished in 0.1 minutes.
    Valid callsigns are ['charlie', 'ringo', 'laker', 'hopper', 'arrow', 'tiger', 'eagle', 'baron']


Now we actually run the experiment.



.. code-block:: python


    max_wait = 0.01 if building_doc else 3
    with ExperimentController(
            exp_name='CRM corpus example', window_size=(720, 480),
            full_screen=False, participant='foo', session='foo', version='dev',
            output_dir=None, stim_fs=40000) as ec:
        ec.screen_text('Report the color and number spoken by the female '
                       'talker.', wrap=True)
        screenshot = ec.screenshot()
        ec.flip()
        ec.wait_secs(max_wait)

        ec.load_buffer(x)
        ec.identify_trial(ec_id='', ttl_id=[])
        ec.start_stimulus()
        ec.wait_secs(x.shape[-1] / float(fs))

        resp = crm_response_menu(ec, max_wait=0.01 if building_doc else np.inf)
        if resp == ('g', '6'):
            ec.screen_prompt('Correct!', max_wait=max_wait)
        else:
            ec.screen_prompt('Incorrect.', max_wait=max_wait)
        ec.trial_ok()

    analyze.plot_screen(screenshot)



.. image:: /auto_examples/stimuli/images/sphx_glr_crm_stimuli_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    exp_name: CRM corpus example
    date: 2018-06-21 15_06_30.852233
    file: /home/circleci/project/examples/stimuli/crm_stimuli.py
    participant: foo
    session: foo
    2018-06-21 15:06:30,853 - INFO    - Expyfun: Using version 2.0.0.dev0 (requested dev)
    2018-06-21 15:06:30,853 - INFO    - Expyfun: Setting up Pyglet audio
    2018-06-21 15:06:30,936 - INFO    - Expyfun: Setting up screen
    2018-06-21 15:06:30,957 - EXP     - Expyfun: Set screen visibility True
    2018-06-21 15:06:31,043 - INFO    - Expyfun: Initializing dummy triggering mode
    2018-06-21 15:06:31,046 - INFO    - Expyfun: Initialization complete
    2018-06-21 15:06:31,046 - EXP     - Expyfun: Participant: foo
    2018-06-21 15:06:31,047 - EXP     - Expyfun: Session: foo
    2018-06-21 15:06:31,237 - WARNING - Expyfun: Stimulus max RMS (0.025983532855792944) exceeds stated RMS (0.01) by more than 6 dB.
    2018-06-21 15:06:31,237 - EXP     - Expyfun: Loading 161136 samples to buffer
    2018-06-21 15:06:31,239 - EXP     - Expyfun: Stamp trial ID to ec_id  : 
    2018-06-21 15:06:31,239 - EXP     - Expyfun: Stamp trial ID to ttl_id : []
    2018-06-21 15:06:31,239 - EXP     - Expyfun: Starting stimuli: flipping screen and playing audio
    2018-06-21 15:06:35,413 - WARNING - ec.trial_ok called before stimulus had stopped
    2018-06-21 15:06:35,413 - EXP     - Expyfun: Trial OK
    2018-06-21 15:06:35,413 - INFO    - Expyfun: Exiting
    2018-06-21 15:06:35,417 - EXP     - Expyfun: Audio stopped and reset.


**Total running time of the script:** ( 0 minutes  9.503 seconds)


.. _sphx_glr_download_auto_examples_stimuli_crm_stimuli.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: crm_stimuli.py <crm_stimuli.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: crm_stimuli.ipynb <crm_stimuli.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
