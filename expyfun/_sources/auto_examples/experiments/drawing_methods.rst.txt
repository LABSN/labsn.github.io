.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_experiments_drawing_methods.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_experiments_drawing_methods.py:


==========================
Experiment drawing methods
==========================

expyfun provides multiple methods for drawing simple screen objects.



.. image:: /auto_examples/experiments/images/sphx_glr_drawing_methods_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    exp_name: test
    date: 2019-01-30 22_35_12.837042
    file: /home/circleci/project/examples/experiments/drawing_methods.py
    participant: 2
    session: 1
    2019-01-30 22:35:12,837 - INFO    - Expyfun: Using version 2.0.0.dev0 (requested dev)
    2019-01-30 22:35:12,837 - INFO    - Expyfun: Setting up Pyglet audio
    2019-01-30 22:35:12,883 - INFO    - Expyfun: Setting up screen
    2019-01-30 22:35:12,895 - EXP     - Expyfun: Set screen visibility True
    2019-01-30 22:35:12,952 - INFO    - Expyfun: Initializing dummy triggering mode
    2019-01-30 22:35:12,955 - INFO    - Expyfun: Initialization complete
    2019-01-30 22:35:12,955 - EXP     - Expyfun: Participant: 2
    2019-01-30 22:35:12,955 - EXP     - Expyfun: Session: 1
    2019-01-30 22:35:13,786 - INFO    - Expyfun: Exiting
    2019-01-30 22:35:13,788 - EXP     - Expyfun: Audio stopped and reset.




|


.. code-block:: python

    # Author: Eric Larson <larsoner@uw.edu>
    #
    # License: BSD (3-clause)

    import numpy as np

    from expyfun import visual, ExperimentController
    import expyfun.analyze as ea

    print(__doc__)


    with ExperimentController('test', session='1', participant='2',
                              full_screen=False, window_size=[600, 600],
                              output_dir=None, version='dev') as ec:
        ec.screen_text('hello')

        # make an image with  alpha the x-dimension (columns), RGB upward
        img_buffer = np.zeros((120, 100, 4))
        img_buffer[:, :50, 3] = 1.0
        img_buffer[:, 50:, 3] = 0.5
        img_buffer[0] = 1
        for ii in range(3):
            img_buffer[ii * 40:(ii + 1) * 40, :, ii] = 1.0
        img = visual.RawImage(ec, img_buffer, scale=2.)

        # make a line, rectangle, diamond, and circle
        line = visual.Line(ec, [[-2, 2, 2, -2], [-2, 2, -2, -2]], units='deg',
                           line_color='w', line_width=2.0)
        rect = visual.Rectangle(ec, [0, 0, 2, 2], units='deg', fill_color='y')
        diamond = visual.Diamond(ec, [0, 0, 4, 4], units='deg', fill_color=None,
                                 line_color='gray', line_width=2.0)
        circle = visual.Circle(ec, 1, units='deg', line_color='w', fill_color='k',
                               line_width=2.0)

        # do the drawing, then flip
        for obj in [img, line, rect, diamond, circle]:
            obj.draw()

        screenshot = ec.screenshot()  # must be called *before* the flip
        ec.flip()
        ec.wait_for_presses(0.5)

    ea.plot_screen(screenshot)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.067 seconds)


.. _sphx_glr_download_auto_examples_experiments_drawing_methods.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: drawing_methods.py <drawing_methods.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: drawing_methods.ipynb <drawing_methods.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
